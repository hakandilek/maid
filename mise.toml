[settings]
experimental = true

[tools]
usage = "latest"
node = "22"
go = "latest"
rust = "latest"
yarn = "latest"
python = "3.12"
poetry = "latest"

[tasks."llm:generate-bundle"]
description = 'Bundle the repository into the file bundle.md'
hide = true # hide this task from the lis
run = """
#!/usr/bin/env bash
repomix --style markdown --output-show-line-numbers --output bundle.md --ignore **/uv.lock,**/package-lock.json,**/.env,**/Cargo.lock,**/node_modules,**/target,**/dist,**/build,**/bundle.md,**/yarn.lock
"""

[tasks."llm:clean-bundle"]
description = 'Clean up all generated bundle file bundle.md'
run = """
#!/usr/bin/env bash
find . -name "bundle.md" -print -delete
"""

[tasks."llm:readme"]
depends = ["llm:generate-bundle"]
description = 'Generate README.md from repository content'
run = """
#!/usr/bin/env bash
cat bundle.md | llm -t readme-gen > README.md
"""

[tasks."llm:bundle"]
depends = ["llm:generate-bundle"]
description = 'Bundle the repository into the file bundle.md and copy it`s content to the system clipboard'
run = """
#!/usr/bin/env bash
cat bundle.md | pbcopy
echo "Pushed bundle.md to the copy buffer"
"""

[tasks."llm:issues"]
depends = ["llm:generate-bundle"]
description = 'Generate GitHub/Gitlab issues from repository content, store them in issues.md'
run = """
#!/usr/bin/env bash
cat bundle.md | llm -t issue-gen > issues.md
"""

[tasks."llm:code-review"]
depends = ["llm:generate-bundle"]
description = 'Generate code review output from repository content, store it in code-review.md'
run = """
#!/usr/bin/env bash
cat bundle.md | llm -t code-review-gen > code-review.md
"""

[tasks."llm:missing-tests"]
depends = ["llm:generate-bundle"]
description = 'Generate missing tests for code in repository, store them in missing-tests.md'
run = """
#!/usr/bin/env bash
cat bundle.md | llm -t missing-tests-gen > missing-tests.md
"""
